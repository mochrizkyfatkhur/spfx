import { __decorate, __extends } from "tslib";
import { body } from "@pnp/odata";
import { _GraphQueryableCollection, _GraphQueryableInstance, graphInvokableFactory, } from "../graphqueryable.js";
import { defaultPath, updateable, deleteable, addable, getById } from "../decorators.js";
import { graphPost, graphDelete } from "../operations.js";
/**
 * Conversation
 */
var _Conversation = /** @class */ (function (_super) {
    __extends(_Conversation, _super);
    function _Conversation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Conversation.prototype, "threads", {
        /**
         * Get all the threads in a group conversation.
         */
        get: function () {
            return Threads(this);
        },
        enumerable: false,
        configurable: true
    });
    _Conversation = __decorate([
        updateable(),
        deleteable()
    ], _Conversation);
    return _Conversation;
}(_GraphQueryableInstance));
export { _Conversation };
export var Conversation = graphInvokableFactory(_Conversation);
/**
 * Conversations
 */
var _Conversations = /** @class */ (function (_super) {
    __extends(_Conversations, _super);
    function _Conversations() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    _Conversations = __decorate([
        defaultPath("conversations"),
        addable(),
        getById(Conversation)
    ], _Conversations);
    return _Conversations;
}(_GraphQueryableCollection));
export { _Conversations };
export var Conversations = graphInvokableFactory(_Conversations);
/**
 * Thread
 */
var _Thread = /** @class */ (function (_super) {
    __extends(_Thread, _super);
    function _Thread() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Thread.prototype, "posts", {
        /**
         * Get all the threads in a group conversation.
         */
        get: function () {
            return Posts(this);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Reply to a thread in a group conversation and add a new post to it
     *
     * @param post Contents of the post
     */
    _Thread.prototype.reply = function (post) {
        return graphPost(this.clone(Thread, "reply"), body(post));
    };
    _Thread = __decorate([
        deleteable()
    ], _Thread);
    return _Thread;
}(_GraphQueryableInstance));
export { _Thread };
export var Thread = graphInvokableFactory(_Thread);
/**
 * Threads
 */
var _Threads = /** @class */ (function (_super) {
    __extends(_Threads, _super);
    function _Threads() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    _Threads = __decorate([
        defaultPath("threads"),
        addable(),
        getById(Thread)
    ], _Threads);
    return _Threads;
}(_GraphQueryableCollection));
export { _Threads };
export var Threads = graphInvokableFactory(_Threads);
/**
 * Post
 */
var _Post = /** @class */ (function (_super) {
    __extends(_Post, _super);
    function _Post() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Forward a post to a recipient
     */
    _Post.prototype.forward = function (info) {
        return graphPost(this.clone(Post, "forward"), body(info));
    };
    /**
     * Reply to a thread in a group conversation and add a new post to it
     *
     * @param post Contents of the post
     */
    _Post.prototype.reply = function (post) {
        return graphPost(this.clone(Post, "reply"), body(post));
    };
    _Post = __decorate([
        deleteable()
    ], _Post);
    return _Post;
}(_GraphQueryableInstance));
export { _Post };
export var Post = graphInvokableFactory(_Post);
/**
 * Posts
 */
var _Posts = /** @class */ (function (_super) {
    __extends(_Posts, _super);
    function _Posts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    _Posts = __decorate([
        defaultPath("posts"),
        addable(),
        getById(Post)
    ], _Posts);
    return _Posts;
}(_GraphQueryableCollection));
export { _Posts };
export var Posts = graphInvokableFactory(_Posts);
/**
 * Senders
 */
var _Senders = /** @class */ (function (_super) {
    __extends(_Senders, _super);
    function _Senders() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Add a new user or group to this senders collection
     * @param id The full @odata.id value to add (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)
     */
    _Senders.prototype.add = function (id) {
        return graphPost(this.clone(Senders, "$ref"), body({ "@odata.id": id }));
    };
    /**
     * Removes the entity from the collection
     *
     * @param id The full @odata.id value to remove (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)
     */
    _Senders.prototype.remove = function (id) {
        var remover = this.clone(Senders, "$ref");
        remover.query.set("$id", id);
        return graphDelete(remover);
    };
    return _Senders;
}(_GraphQueryableCollection));
export { _Senders };
export var Senders = graphInvokableFactory(_Senders);
//# sourceMappingURL=types.js.map
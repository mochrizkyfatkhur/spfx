import { __decorate, __extends } from "tslib";
import { body } from "@pnp/odata";
import { _GraphQueryableCollection, _GraphQueryableInstance, graphInvokableFactory } from "../graphqueryable.js";
import { graphPost } from "../operations.js";
import { defaultPath, getById } from "../decorators.js";
import { type } from "../utils/type.js";
/**
 * Attachment
 */
var _Attachment = /** @class */ (function (_super) {
    __extends(_Attachment, _super);
    function _Attachment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return _Attachment;
}(_GraphQueryableInstance));
export { _Attachment };
export var Attachment = graphInvokableFactory(_Attachment);
/**
 * Attachments
 */
var _Attachments = /** @class */ (function (_super) {
    __extends(_Attachments, _super);
    function _Attachments() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Add attachment to this collection
     *
     * @param name Name given to the attachment file
     * @param bytes File content
     */
    _Attachments.prototype.addFile = function (name, bytes) {
        return graphPost(this, body(type("#microsoft.graph.fileAttachment", {
            contentBytes: bytes,
            name: name,
        })));
    };
    _Attachments = __decorate([
        defaultPath("attachments"),
        getById(Attachment)
    ], _Attachments);
    return _Attachments;
}(_GraphQueryableCollection));
export { _Attachments };
export var Attachments = graphInvokableFactory(_Attachments);
//# sourceMappingURL=types.js.map
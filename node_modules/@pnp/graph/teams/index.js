import { __awaiter, __generator } from "tslib";
import { addProp, body } from "@pnp/odata";
import { GraphRest } from "../rest";
import { _Group, Group } from "../groups/types";
import { Team, Teams } from "./types";
import { graphPut } from "../operations";
import "./users";
export { Channel, Channels, Tab, Tabs, Team, Teams, } from "./types.js";
addProp(_Group, "team", Team);
_Group.prototype.createTeam = function (props) {
    return __awaiter(this, void 0, void 0, function () {
        var data;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, graphPut(this.clone(Group, "team"), body(props))];
                case 1:
                    data = _a.sent();
                    return [2 /*return*/, {
                            data: data,
                            team: this.team,
                        }];
            }
        });
    });
};
Reflect.defineProperty(GraphRest.prototype, "teams", {
    configurable: true,
    enumerable: true,
    get: function () {
        return this.childConfigHook(function (_a) {
            var options = _a.options, baseUrl = _a.baseUrl, runtime = _a.runtime;
            return Teams(baseUrl).configure(options).setRuntime(runtime);
        });
    },
});
//# sourceMappingURL=index.js.map
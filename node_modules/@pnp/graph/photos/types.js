import { __decorate, __extends } from "tslib";
import { _GraphQueryableInstance, graphInvokableFactory } from "../graphqueryable.js";
import { BlobParser, BufferParser } from "@pnp/odata";
import { defaultPath } from "../decorators.js";
import { graphPatch } from "../operations.js";
var _Photo = /** @class */ (function (_super) {
    __extends(_Photo, _super);
    function _Photo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Gets the image bytes as a blob (browser)
     */
    _Photo.prototype.getBlob = function () {
        return this.clone(Photo, "$value", false).usingParser(new BlobParser())();
    };
    /**
     * Gets the image file bytes as a Buffer (node.js)
     */
    _Photo.prototype.getBuffer = function () {
        return this.clone(Photo, "$value", false).usingParser(new BufferParser())();
    };
    /**
     * Sets the file bytes
     *
     * @param content Image file contents, max 4 MB
     */
    _Photo.prototype.setContent = function (content) {
        return graphPatch(this.clone(Photo, "$value", false), { body: content });
    };
    _Photo = __decorate([
        defaultPath("photo")
    ], _Photo);
    return _Photo;
}(_GraphQueryableInstance));
export { _Photo };
export var Photo = graphInvokableFactory(_Photo);
//# sourceMappingURL=types.js.map
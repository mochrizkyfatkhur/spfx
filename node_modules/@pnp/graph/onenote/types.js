import { __awaiter, __decorate, __extends, __generator } from "tslib";
import { body } from "@pnp/odata";
import { GraphQueryableCollection, _GraphQueryableInstance, _GraphQueryableCollection, graphInvokableFactory, } from "../graphqueryable.js";
import { defaultPath, getById } from "../decorators.js";
import { graphPost } from "../operations.js";
/**
 * Represents a onenote entity
 */
var _OneNote = /** @class */ (function (_super) {
    __extends(_OneNote, _super);
    function _OneNote() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_OneNote.prototype, "notebooks", {
        get: function () {
            return Notebooks(this);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(_OneNote.prototype, "sections", {
        get: function () {
            return Sections(this);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(_OneNote.prototype, "pages", {
        get: function () {
            return this.clone(GraphQueryableCollection, "pages");
        },
        enumerable: false,
        configurable: true
    });
    _OneNote = __decorate([
        defaultPath("onenote")
    ], _OneNote);
    return _OneNote;
}(_GraphQueryableInstance));
export { _OneNote };
export var OneNote = graphInvokableFactory(_OneNote);
/**
 * Describes a notebook instance
 *
 */
var _Notebook = /** @class */ (function (_super) {
    __extends(_Notebook, _super);
    function _Notebook() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(_Notebook.prototype, "sections", {
        get: function () {
            return Sections(this);
        },
        enumerable: false,
        configurable: true
    });
    return _Notebook;
}(_GraphQueryableInstance));
export { _Notebook };
export var Notebook = graphInvokableFactory(_Notebook);
/**
 * Describes a collection of Notebook objects
 *
 */
var _Notebooks = /** @class */ (function (_super) {
    __extends(_Notebooks, _super);
    function _Notebooks() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Create a new notebook as specified in the request body.
     *
     * @param displayName Notebook display name
     */
    _Notebooks.prototype.add = function (displayName) {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, graphPost(this, body({ displayName: displayName }))];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, {
                                data: data,
                                notebook: this.getById(data.id),
                            }];
                }
            });
        });
    };
    _Notebooks = __decorate([
        defaultPath("notebooks"),
        getById(Notebook)
    ], _Notebooks);
    return _Notebooks;
}(_GraphQueryableCollection));
export { _Notebooks };
export var Notebooks = graphInvokableFactory(_Notebooks);
/**
 * Describes a sections instance
 */
var _Section = /** @class */ (function (_super) {
    __extends(_Section, _super);
    function _Section() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return _Section;
}(_GraphQueryableInstance));
export { _Section };
export var Section = graphInvokableFactory(_Section);
/**
 * Describes a collection of Sections objects
 *
 */
var _Sections = /** @class */ (function (_super) {
    __extends(_Sections, _super);
    function _Sections() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Adds a new section
     *
     * @param displayName New section display name
     */
    _Sections.prototype.add = function (displayName) {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, graphPost(this, body({ displayName: displayName }))];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, {
                                data: data,
                                section: this.getById(data.id),
                            }];
                }
            });
        });
    };
    _Sections = __decorate([
        defaultPath("sections"),
        getById(Section)
    ], _Sections);
    return _Sections;
}(_GraphQueryableCollection));
export { _Sections };
export var Sections = graphInvokableFactory(_Sections);
//# sourceMappingURL=types.js.map
import { __extends } from "tslib";
import { graphDelete, graphPatch, graphPost } from "./operations.js";
import { body, headers } from "@pnp/odata";
/**
 * Decorator used to specify the default path for Queryable objects
 *
 * @param path
 */
export function defaultPath(path) {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            __extends(class_1, _super);
            function class_1() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;
            }
            return class_1;
        }(target));
    };
}
/**
 * Adds the delete method to the tagged class
 */
export function deleteable() {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            __extends(class_2, _super);
            function class_2() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_2.prototype.delete = function () {
                return graphDelete(this);
            };
            return class_2;
        }(target));
    };
}
/**
 * Adds the delete method to the tagged class
 */
export function deleteableWithETag() {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            __extends(class_3, _super);
            function class_3() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_3.prototype.delete = function (eTag) {
                if (eTag === void 0) { eTag = "*"; }
                return graphDelete(this, headers({
                    "If-Match": eTag,
                }));
            };
            return class_3;
        }(target));
    };
}
/**
 * Adds the update method to the tagged class
 */
export function updateable() {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            __extends(class_4, _super);
            function class_4() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_4.prototype.update = function (props) {
                return graphPatch(this, body(props));
            };
            return class_4;
        }(target));
    };
}
/**
 * Adds the update method to the tagged class
 */
export function updateableWithETag() {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            __extends(class_5, _super);
            function class_5() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_5.prototype.update = function (props, eTag) {
                if (eTag === void 0) { eTag = "*"; }
                return graphPatch(this, body(props, headers({
                    "If-Match": eTag,
                })));
            };
            return class_5;
        }(target));
    };
}
/**
 * Adds the add method to the tagged class
 */
export function addable() {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            __extends(class_6, _super);
            function class_6() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_6.prototype.add = function (props) {
                return graphPost(this, body(props));
            };
            return class_6;
        }(target));
    };
}
/**
 * Adds the getById method to a collection
 */
export function getById(factory) {
    // eslint-disable-next-line @typescript-eslint/ban-types
    return function (target) {
        return /** @class */ (function (_super) {
            __extends(class_7, _super);
            function class_7() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_7.prototype.getById = function (id) {
                return factory(this, id);
            };
            return class_7;
        }(target));
    };
}
//# sourceMappingURL=decorators.js.map
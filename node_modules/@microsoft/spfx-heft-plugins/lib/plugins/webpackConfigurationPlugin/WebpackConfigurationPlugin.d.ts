import type { HeftConfiguration, HeftSession, IHeftPlugin } from '@rushstack/heft';
import { GenerateCssClassNameFunction } from '@microsoft/sp-css-loader';
import type { _IManifestsFileMetadata as IManifestsFileMetadata } from '@ms/spfx-manifests-file';
import { ISpfxWebpackFolderPaths, WebpackLibraryTarget } from './WebpackConfigurationGenerator';
import { IConfigJson } from '../../spfxConfig/interfaces/config-v2';
import { ILocalization } from './ILocalization';
/**
 * @public
 */
export interface IWebpackConfigurationPluginAccessorProperties {
    linkedExternalsToBundle?: string[];
    libraryName?: string;
    libraryTarget?: WebpackLibraryTarget;
    disableAsyncComponentLoading?: boolean;
    assetsAreVersioned?: boolean;
    generateCssClassName?: GenerateCssClassNameFunction;
    loadThemedStylesImportPath?: string;
    configJson?: IConfigJson;
    /**
     * @alpha
     */
    getLocalization?: () => ILocalization;
    releaseManifestFolderName?: string;
    /**
     * @internal
     */
    _manifestsJsFileMetadata?: IManifestsFileMetadata;
    /**
     * @internal
     */
    _allowMissingConfigJson?: boolean;
}
/**
 * @public
 */
export interface IWebpackConfigurationPluginAccessor {
    properties: IWebpackConfigurationPluginAccessorProperties;
}
export declare class WebpackConfigurationPlugin implements IHeftPlugin {
    readonly pluginName: string;
    private _accessor;
    get accessor(): IWebpackConfigurationPluginAccessor;
    static getSpfxWebpackFolders(buildFolder: string): ISpfxWebpackFolderPaths;
    /**
     * Generate the SPFx component webpack configuration
     */
    apply(heftSession: HeftSession, heftConfiguration: HeftConfiguration): void;
    private _generateSpfxWebpackConfigurationAsync;
    private _loadConfigJson;
}
declare const _default: WebpackConfigurationPlugin;
export default _default;
//# sourceMappingURL=WebpackConfigurationPlugin.d.ts.map